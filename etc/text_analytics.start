// Copyright (C) 2008 - INRIA
// Copyright (C) 2009 - DIGITEO

// This file is released under the 3-clause BSD license. See COPYING-BSD.

function text_analyticslib = startModule()

    TOOLBOX_NAME  = "text_analytics";
    TOOLBOX_TITLE = "Text Analytics Toolbox";

  mprintf("Start " + TOOLBOX_NAME + " 0.1\n");
  mprintf(TOOLBOX_TITLE + "\n");
  mprintf("2019 - Bytecode Malaysia\n");

  if isdef("text_analyticslib") then
    warning("Text Analytics library is already loaded");
    return;
  end

  etc_tlbx  = get_absolute_file_path("text_analytics.start");
  etc_tlbx  = getshortpathname(etc_tlbx);
  root_tlbx = strncpy( etc_tlbx, length(etc_tlbx)-length("\etc\") );

//Load  functions library
// =============================================================================
  mprintf("\tLoad macros\n");
  pathmacros = pathconvert( root_tlbx ) + "macros" + filesep();
  text_analyticslib = lib(pathmacros);

// load gateways and Java libraries
// =============================================================================
  verboseMode = ilib_verbose();
  ilib_verbose(0);
// mprintf("\tLoad gateways\n");
//  exec(pathconvert(root_tlbx+"/sci_gateway/loader_gateway.sce",%f));
  mprintf("\tLoad Java libraries\n");
  exec(pathconvert(root_tlbx+"/src/java/loader.sce",%f));
//  ilib_verbose(verboseMode);

path_thirdparty = pathconvert(root_tlbx+"/thirdparty");
javaclasspath(path_thirdparty)
javaclasspath(path_thirdparty+"/twitter4j-core-4.0.7.jar")
javaclasspath(path_thirdparty+"/twitter4j-async-4.0.7.jar")
javaclasspath(path_thirdparty+"/twitter4j-stream-4.0.7.jar")
javaclasspath(path_thirdparty+"/commons-csv-1.7.jar")

// load localization
//  addlocalizationdomain(TOOLBOX_NAME, root_tlbx + "/locales");

// Load and add help chapter
// =============================================================================
  if or(getscilabmode() == ["NW";"STD"]) then
    mprintf("\tLoad help\n");
    path_addchapter = pathconvert(root_tlbx+"/jar");
    if ( isdir(path_addchapter) <> [] ) then
      add_help_chapter(TOOLBOX_NAME, path_addchapter, %F);
    end
  end

// Load demos
// =============================================================================
//  if or(getscilabmode() == ["NW";"STD"]) then
//    mprintf("\tLoad demos\n");
//    pathdemos = pathconvert(root_tlbx+"/demos/toolbox_skeleton.dem.gateway.sce", %F, %T);
//    add_demo(TOOLBOX_TITLE, pathdemos);
//  end

// Load Preferences GUI
// =============================================================================
//  if getscilabmode() == "STD" then
//    addModulePreferences(TOOLBOX_TITLE, root_tlbx, etc_tlbx + "toolbox_skeleton_preferences.xml");
//  end

endfunction

text_analyticslib = startModule();
clear startModule; // remove startModule on stack
